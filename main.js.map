{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.module.ts","webpack:///src/app/my-elem/my-elem.component.ts","webpack:///src/app/my-elem/my-elem.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppModule","injector","el","customElements","define","declarations","imports","providers","entryComponents","MyElemComponent","title","selector","templateUrl","styleUrls","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,S;AACX,yBAAYC,QAAZ,EAAgC;AAAA;;AAC9B,YAAMC,EAAE,GAAG,8EAAoB,0EAApB,EAAqC;AAAED,kBAAQ,EAARA;AAAF,SAArC,CAAX;AACAE,sBAAc,CAACC,MAAf,CAAsB,SAAtB,EAAiCF,EAAjC;AACD;;;;wCACe,CAAG;;;;;;;YALRF;;;;yBAAAA,S,EAAS,8G;AAAA,O;AAAA,iBAHT,E;AAAE,gBADJ,CAAC,uEAAD,CACI;;;;0HAGFA,S,EAAS;AAAA,uBALL,0EAKK;AALU,kBACpB,uEADoB;AAKV,O;AAJG,K;;;;;sEAIZA,S,EAAS;cANrB,sDAMqB;eANZ;AACRK,sBAAY,EAAE,CAAC,0EAAD,CADN;AAERC,iBAAO,EAAE,CAAC,uEAAD,CAFD;AAGRC,mBAAS,EAAE,EAHH;AAIRC,yBAAe,EAAE,CAAC,0EAAD;AAJT,S;AAMY,Q;;;;;;;;;;;;;;;;;;;;;;ACZtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;AACX,iCAAc;AAAA;;AAEd,aAAAC,KAAA,GAAQ,QAAR;AAFiB;;;;mCACN,CAAG;;;;;;;uBAFHD,e;AAAe,K;;;YAAfA,e;AAAe,8B;AAAA,e;AAAA,a;AAAA,oC;AAAA;AAAA;ACP5B;;AACE;;AAEA;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAA6B;;AACjC;;AAAI;;AAAkD;;AACxD;;;;;;;;sEDAaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTE,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements'\nimport { MyElemComponent } from './my-elem/my-elem.component';\n\n\n@NgModule({\n  declarations: [MyElemComponent],\n  imports: [BrowserModule],\n  providers: [],\n  entryComponents: [MyElemComponent]\n})\nexport class AppModule {\n  constructor(injector: Injector) {\n    const el = createCustomElement(MyElemComponent, { injector });\n    customElements.define(\"my-elem\", el);\n  }\n  ngDoBootstrap() { }\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'my-elem',\n  templateUrl: './my-elem.component.html',\n  styleUrls: ['./my-elem.component.css']\n})\nexport class MyElemComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n  title = 'ng-web';\n}\n","<div class=\"my_elem_title\">\n  Hello Eshwar\n  TODO:\n  <li>Publish as npm module</li>\n  <li>use in react library</li>\n  <li>use with in angular framework</li>\n  <li>create set of web components in one single library</li>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}